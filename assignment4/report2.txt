## report2.txt 

Using two images, with dimensions: 
    Image1 - (H,W,C) = (480, 640, 3) beatles.jpg
    Image2 - (H,W,C) = (402, 721, 3) zebra.jpg 
    
Runtime: 
    Image1: 
    Python: 3.82 s ± 103 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)
    Numpy: 30.1 ms ± 4.17 ms per loop (mean ± std. dev. of 7 runs, 10 loops each) 
    
    Image2: 
    Python: 3.43 s ± 34.2 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)
    Numpy: 24.4 ms ± 1.61 ms per loop (mean ± std. dev. of 7 runs, 10 loops each)

    

By using vectorized implementation with numpy slicing it is observed that the computation time is significantly improved from approximately 3.8 seconds to approximately 30 ms. This is expected since the vectors computes the nine arrays in one computation, and not the pixel value elementwise. 

Speedup gained from python to vectorized: 
    Image1 - (3.43-0.024)/0.024 = 141.9% gained 
    Image2 - (3.82-0.03)/0.03 = 126.3% gained 

